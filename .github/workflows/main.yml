name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Install Node.js
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Install Java
      - name: Install Java
        run: |
          sudo apt-get update
          sudo apt-get install openjdk-8-jdk

      # Authenticate to PRE environment
      - name: Authenticate to PRE environment
        run: |
          echo $PRE_SFDX_AUTH_URL | sfdx auth:sfdxurl:store -f -
        env:
          PRE_SFDX_AUTH_URL: ${{ secrets.PRE_SFDX_AUTH_URL }}

      # Generate delta changes
      - name: Generate delta changes
        run: |
          sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/
        env:
          SFDX_USE_PROGRESS_BAR: false

      # Run static code analysis
      - name: Run static code analysis
        run: |
          cd changed-sources
          sfdx scanner:run --format sarif --target './**/*.cls' --category "Design,Best Practices,Performance" --outfile 'apexScanResults.sarif'
          cd ..

      # Upload SARIF file
      - name: Upload SARIF file
        if: ${{ steps.scan.outputs.sarif_file_exists }}
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: changed-sources/apexScanResults.sarif

      # Check-only deploy delta changes - run specified tests
      - name: Check-only deploy delta changes - run specified tests
        if: ${{ env.APEX_TESTS != 'all' }}
        run: |
          echo ${{ env.APEX_TESTS }}
          sfdx force:source:deploy -p "changed-sources/force-app" --checkonly --testlevel RunSpecifiedTests --runtests ${{ env.APEX_TESTS }} --json

      # Check-only deploy delta changes - run all tests
      - name: Check-only deploy delta changes - run all tests
        if: ${{ env.APEX_TESTS == 'all' }}
        run: |
          sfdx force:source:deploy -p "changed-sources/force-app" --checkonly --testlevel RunAllTestsInOrg --json

      # Deploy destructive changes (if any)
      - name: Deploy destructive changes (if any)
        if: ${{ steps.check_destructive.outputs.exists }}
        run: |
          sfdx force:mdapi:deploy -d "changed-sources/destructiveChanges" --checkonly --ignorewarnings